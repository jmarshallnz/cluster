
R : Copyright 2002, The R Development Core Team
Version 1.6.2 beta (2002-12-28)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type `license()' or `licence()' for distribution details.

R is a collaborative project with many contributors.
Type `contributors()' for more information.

Type `demo()' for some demos, `help()' for on-line help, or
`help.start()' for a HTML browser interface to help.
Type `q()' to quit R.

> library(cluster)
Loading required package: mva 
> 
> ## generate 1500 objects, divided into 2 clusters.
> set.seed(264)
> x <- rbind(cbind(rnorm(700, 0,8), rnorm(700, 0,8)),
+            cbind(rnorm(800,50,8), rnorm(800,10,8)))
> 
> isEq <- function(x,y, epsF = 100)
+     is.logical(r <- all.equal(x,y, tol = epsF * .Machine$double.eps)) && r
> 
> 
> .proctime00 <- proc.time()
> 
> ## full size sample {should be = pam()}:
> n0 <- length(iSml <- c(1:70, 701:720))
> summary(clara0 <- clara(x[iSml,], k = 2, sampsize = n0))
Object of class `clara' from call:
 clara(x = x[iSml, ], k = 2, sampsize = n0) 
Medoids:
          [,1]       [,2]
[1,]  1.619094 -0.6697098
[2,] 51.460664 12.6328215
Objective function:	  9.351248 
Numerical information per cluster:
     size max_diss  av_diss isolation
[1,]   70 23.67426 9.295059 0.4589260
[2,]   20 19.81041 9.547913 0.3840251
Average silhouette width per cluster:
[1] 0.7419559 0.7295666
Average silhouette width of best sample: 0.7392027 

Best sample:
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
[51] 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
[76] 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
Clustering vector:
 [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[39] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2
[77] 2 2 2 2 2 2 2 2 2 2 2 2 2 2

Silhouette plot information for best sample:
   cluster neighbor sil_width
40       1        2 0.8189217
70       1        2 0.8186973
66       1        2 0.8173129
39       1        2 0.8171253
6        1        2 0.8158260
9        1        2 0.8147047
12       1        2 0.8133175
26       1        2 0.8128297
56       1        2 0.8117376
7        1        2 0.8095740
33       1        2 0.8092035
60       1        2 0.8067630
62       1        2 0.8059430
21       1        2 0.8030279
41       1        2 0.8017783
16       1        2 0.8005143
27       1        2 0.7971827
59       1        2 0.7968887
8        1        2 0.7947941
17       1        2 0.7941256
38       1        2 0.7934237
32       1        2 0.7920043
63       1        2 0.7901349
52       1        2 0.7872858
46       1        2 0.7852065
47       1        2 0.7842709
65       1        2 0.7839258
4        1        2 0.7809115
23       1        2 0.7799612
19       1        2 0.7786651
42       1        2 0.7780707
20       1        2 0.7768930
37       1        2 0.7719716
11       1        2 0.7719447
22       1        2 0.7698024
30       1        2 0.7685122
68       1        2 0.7634484
1        1        2 0.7624047
58       1        2 0.7613915
50       1        2 0.7567549
25       1        2 0.7468130
31       1        2 0.7437604
2        1        2 0.7423751
15       1        2 0.7342193
69       1        2 0.7315055
36       1        2 0.7312177
48       1        2 0.7293586
14       1        2 0.7222345
3        1        2 0.7209803
44       1        2 0.7169812
34       1        2 0.7147437
64       1        2 0.7129325
54       1        2 0.7089811
49       1        2 0.7044900
43       1        2 0.6884306
29       1        2 0.6845792
10       1        2 0.6813561
51       1        2 0.6730410
13       1        2 0.6685180
55       1        2 0.6680502
5        1        2 0.6518400
35       1        2 0.6506280
24       1        2 0.6343832
18       1        2 0.6176214
61       1        2 0.6027746
57       1        2 0.5944097
45       1        2 0.5878055
53       1        2 0.5668748
28       1        2 0.5615843
67       1        2 0.5471711
82       2        1 0.8130494
84       2        1 0.8120131
90       2        1 0.8004220
73       2        1 0.7992194
78       2        1 0.7895616
76       2        1 0.7859463
89       2        1 0.7832719
88       2        1 0.7820209
83       2        1 0.7599199
80       2        1 0.7570550
87       2        1 0.7435898
71       2        1 0.7339466
75       2        1 0.7210982
81       2        1 0.7177946
72       2        1 0.7137692
86       2        1 0.7045675
79       2        1 0.7003733
85       2        1 0.6854539
74       2        1 0.4973579
77       2        1 0.4909004

4005 dissimilarities, summarized :
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.3743 10.2200 18.3100 26.9800 46.5000 81.3800 
Metric :  euclidean 
Number of objects : 90

Available components:
[1] "sample"     "medoids"    "clustering" "objective"  "clusinfo"  
[6] "diss"       "call"       "silinfo"    "data"      
>           pam0 <- pam  (x[iSml,], k = 2)
> stopifnot(identical(clara0$clustering, pam0$clustering)
+         , isEq(clara0$objective, unname(pam0$objective[2]))
+           )
> 
> summary(clara2 <- clara(x, 2))
Object of class `clara' from call:
 clara(x = x, k = 2) 
Medoids:
          [,1]       [,2]
[1,]  2.787896 0.06403649
[2,] 51.594304 8.52944737
Objective function:	  10.15876 
Numerical information per cluster:
     size max_diss   av_diss isolation
[1,]  700 32.70228 10.378867 0.6601837
[2,]  800 27.37593  9.966161 0.5526569
Average silhouette width per cluster:
[1] 0.752770 0.772374
Average silhouette width of best sample: 0.7652453 

Best sample:
 [1]   21   50   97  142  168  191  192  197  224  325  328  408  433  458  471
[16]  651  712  714  722  797  805  837  909  919  926  999 1006 1018 1019 1049
[31] 1081 1084 1132 1144 1150 1201 1207 1291 1307 1317 1330 1374 1426 1428
Clustering vector:
   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
  [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
  [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [112] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [149] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [186] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [223] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [260] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [297] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [334] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [371] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [408] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [445] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [482] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [519] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [556] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [593] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [630] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [667] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2
 [704] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [741] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [778] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [815] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [852] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [889] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [926] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [963] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1000] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1037] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1074] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1111] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1148] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1185] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1222] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1259] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1296] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1333] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1370] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1407] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1444] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1481] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2

Silhouette plot information for best sample:
     cluster neighbor sil_width
458        1        2 0.8231660
142        1        2 0.8153602
21         1        2 0.8123992
197        1        2 0.8118223
408        1        2 0.8112843
97         1        2 0.8061654
433        1        2 0.7948877
191        1        2 0.7761169
50         1        2 0.7689566
651        1        2 0.7664647
192        1        2 0.7439787
325        1        2 0.7187212
471        1        2 0.7138665
168        1        2 0.6506124
224        1        2 0.6364204
328        1        2 0.5940982
919        2        1 0.8392739
1307       2        1 0.8360310
1081       2        1 0.8358883
1132       2        1 0.8313630
1207       2        1 0.8297462
712        2        1 0.8252963
1428       2        1 0.8194915
1150       2        1 0.8173306
1006       2        1 0.8163528
1144       2        1 0.8130290
1317       2        1 0.8128990
714        2        1 0.8127996
797        2        1 0.8103648
999        2        1 0.8090429
722        2        1 0.7873873
1019       2        1 0.7834898
1374       2        1 0.7830414
1426       2        1 0.7719712
1049       2        1 0.7695327
1201       2        1 0.7612259
1330       2        1 0.7542818
909        2        1 0.7342792
1291       2        1 0.7308119
837        2        1 0.6919267
1084       2        1 0.6774914
926        2        1 0.6713276
805        2        1 0.6304831
1018       2        1 0.5703118

946 dissimilarities, summarized :
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.4388 11.2800 26.1600 32.8900 53.0800 94.2200 
Metric :  euclidean 
Number of objects : 44

Available components:
[1] "sample"     "medoids"    "clustering" "objective"  "clusinfo"  
[6] "diss"       "call"       "silinfo"    "data"      
> 
> clInd <- c("objective", "medoids", "clusinfo")
> clIn4 <- c(clInd, "sample")
> ## clara() {as original code} always draws the *same* random samples !!!!
> clara(x, 2, samples = 50)[clInd]
$objective
[1] 10.00144

$medoids
           [,1]      [,2]
[1,]  0.7558529 0.5295663
[2,] 49.4297134 9.5070656

$clusinfo
     size max_diss   av_diss isolation
[1,]  700 30.73934 10.131630 0.6210615
[2,]  800 27.03542  9.887517 0.5462269

> for(i in 1:20)
+     print(clara(x[sample(nrow(x)),], 2, samples = 50)[clInd])
$objective
[1] 10.00323

$medoids
           [,1]       [,2]
[1,] 49.6543096 10.8671126
[2,]  0.7558529  0.5295663

$clusinfo
     size max_diss  av_diss isolation
[1,]  800 28.41036  9.89087 0.5684433
[2,]  700 30.73934 10.13163 0.6150423

$objective
[1] 9.998856

$medoids
           [,1]     [,2]
[1,] 51.0033452 9.128410
[2,]  0.7469202 1.249320

$clusinfo
     size max_diss  av_diss isolation
[1,]  800 26.86019  9.87836 0.5280131
[2,]  700 30.34337 10.13657 0.5964848

$objective
[1] 10.01977

$medoids
           [,1]      [,2]
[1,]  0.7558529 0.5295663
[2,] 50.8770815 8.5643877

$clusinfo
     size max_diss   av_diss isolation
[1,]  700 30.73934 10.131630 0.6055681
[2,]  800 26.74444  9.921884 0.5268682

$objective
[1] 10.00144

$medoids
           [,1]      [,2]
[1,]  0.7558529 0.5295663
[2,] 49.4297134 9.5070656

$clusinfo
     size max_diss   av_diss isolation
[1,]  700 30.73934 10.131630 0.6210615
[2,]  800 27.03542  9.887517 0.5462269

$objective
[1] 10.01561

$medoids
           [,1]      [,2]
[1,] 49.6543096 10.867113
[2,]  0.7824195  1.649143

$clusinfo
     size max_diss  av_diss isolation
[1,]  800 28.41036  9.89087 0.5712506
[2,]  700 30.16311 10.15816 0.6064933

$objective
[1] 10.01514

$medoids
           [,1]       [,2]
[1,] 49.6543096 10.8671126
[2,]  0.6604674 -0.1066458

$clusinfo
     size max_diss  av_diss isolation
[1,]  800 28.41036  9.89087 0.5658558
[2,]  700 31.01367 10.15717 0.6177065

$objective
[1] 10.00107

$medoids
           [,1]      [,2]
[1,] 50.2492576 10.299201
[2,] -0.8155063  1.417238

$clusinfo
     size max_diss   av_diss isolation
[1,]  800 27.91319  9.844468 0.5385377
[2,]  700 28.93873 10.180037 0.5583237

$objective
[1] 10.00573

$medoids
           [,1]      [,2]
[1,]  0.7558529 0.5295663
[2,] 49.6232996 9.1032208

$clusinfo
     size max_diss   av_diss isolation
[1,]  700 30.73934 10.131630 0.6195718
[2,]  800 26.78803  9.895565 0.5399304

$objective
[1] 10.03059

$medoids
            [,1]     [,2]
[1,] -0.07369905 2.028452
[2,] 49.38189025 9.446208

$clusinfo
     size max_diss  av_diss isolation
[1,]  700 29.23504 10.18670 0.5845981
[2,]  800 27.07402  9.89399 0.5413853

$objective
[1] 10.0203

$medoids
           [,1]      [,2]
[1,]  0.7824195  1.649143
[2,] 51.1016598 11.021770

$clusinfo
     size max_diss   av_diss isolation
[1,]  700 30.16311 10.158161 0.5892994
[2,]  800 28.74613  9.899672 0.5616159

$objective
[1] 10.01382

$medoids
           [,1]     [,2]
[1,]  0.7824195 1.649143
[2,] 49.4297134 9.507066

$clusinfo
     size max_diss   av_diss isolation
[1,]  700 30.16311 10.158161 0.6121028
[2,]  800 27.03542  9.887517 0.5486324

$objective
[1] 9.990858

$medoids
           [,1]      [,2]
[1,] 50.2492576 10.299201
[2,]  0.7824195  1.649143

$clusinfo
     size max_diss   av_diss isolation
[1,]  800 27.91319  9.844468 0.5558465
[2,]  700 30.16311 10.158161 0.6006500

$objective
[1] 9.990858

$medoids
           [,1]      [,2]
[1,] 50.2492576 10.299201
[2,]  0.7824195  1.649143

$clusinfo
     size max_diss   av_diss isolation
[1,]  800 27.91319  9.844468 0.5558465
[2,]  700 30.16311 10.158161 0.6006500

$objective
[1] 9.996497

$medoids
           [,1]      [,2]
[1,]  0.9255294  1.737013
[2,] 50.2492576 10.299201

$clusinfo
     size max_diss   av_diss isolation
[1,]  700 30.23980 10.170244 0.6040545
[2,]  800 27.91319  9.844468 0.5575794

$objective
[1] 10.00415

$medoids
          [,1]       [,2]
[1,] 50.249258 10.2992014
[2,]  1.581224  0.4703763

$clusinfo
     size max_diss   av_diss isolation
[1,]  800 27.91319  9.844468 0.5621923
[2,]  700 31.46479 10.186640 0.6337242

$objective
[1] 10.02048

$medoids
           [,1]     [,2]
[1,]  0.7469202 1.249320
[2,] 49.2342914 9.236618

$clusinfo
     size max_diss   av_diss isolation
[1,]  700 30.34337 10.136565 0.6174776
[2,]  800 27.19128  9.918899 0.5533336

$objective
[1] 9.978477

$medoids
           [,1]       [,2]
[1,]  0.7558529  0.5295663
[2,] 50.2492576 10.2992014

$clusinfo
     size max_diss   av_diss isolation
[1,]  700 30.73934 10.131630 0.6093223
[2,]  800 27.91319  9.844468 0.5533016

$objective
[1] 10.00415

$medoids
          [,1]       [,2]
[1,] 50.249258 10.2992014
[2,]  1.581224  0.4703763

$clusinfo
     size max_diss   av_diss isolation
[1,]  800 27.91319  9.844468 0.5621923
[2,]  700 31.46479 10.186640 0.6337242

$objective
[1] 10.03766

$medoids
            [,1]     [,2]
[1,] -0.07369905 2.028452
[2,] 49.98807148 8.743293

$clusinfo
     size max_diss   av_diss isolation
[1,]  700 29.23504 10.186699 0.5787959
[2,]  800 26.38109  9.907246 0.5222934

$objective
[1] 9.978477

$medoids
           [,1]       [,2]
[1,]  0.7558529  0.5295663
[2,] 50.2492576 10.2992014

$clusinfo
     size max_diss   av_diss isolation
[1,]  700 30.73934 10.131630 0.6093223
[2,]  800 27.91319  9.844468 0.5533016

> 
> clara(x, 2, samples = 101)[clInd]
$objective
[1] 10.00144

$medoids
           [,1]      [,2]
[1,]  0.7558529 0.5295663
[2,] 49.4297134 9.5070656

$clusinfo
     size max_diss   av_diss isolation
[1,]  700 30.73934 10.131630 0.6210615
[2,]  800 27.03542  9.887517 0.5462269

> clara(x, 2, samples = 149)[clInd]
$objective
[1] 9.978477

$medoids
           [,1]       [,2]
[1,]  0.7558529  0.5295663
[2,] 50.2492576 10.2992014

$clusinfo
     size max_diss   av_diss isolation
[1,]  700 30.73934 10.131630 0.6093223
[2,]  800 27.91319  9.844468 0.5533016

> clara(x, 2, samples = 200)[clInd]
$objective
[1] 9.978477

$medoids
           [,1]       [,2]
[1,]  0.7558529  0.5295663
[2,] 50.2492576 10.2992014

$clusinfo
     size max_diss   av_diss isolation
[1,]  700 30.73934 10.131630 0.6093223
[2,]  800 27.91319  9.844468 0.5533016

> ## Note that this last one is practically identical to the slower  pam() one
> 
> x[print(sample(length(x), 20))] <- NA
 [1] 1079  826  357 1917   75 1463 2539 1988  767 1715  772 1407 2391 1574  466
[16]  646 2771  523  861 1725
> clara(x, 2, samples = 50)[clInd]
$objective
[1] 7.261091

$medoids
           [,1]      [,2]
[1,]  0.7558529 0.5295663
[2,] 46.8740873        NA

$clusinfo
     size max_diss  av_diss isolation
[1,]  669 30.73934 9.978089 0.4713103
[2,]  831 25.03604 4.858118 0.3838646

> 
> ###-- Larger example: 2000 objects, divided into 5 clusters.
> x5 <- rbind(cbind(rnorm(400, 0,4), rnorm(400, 0,4)),
+             cbind(rnorm(400,10,8), rnorm(400,40,6)),
+             cbind(rnorm(400,30,4), rnorm(400, 0,4)),
+             cbind(rnorm(400,40,4), rnorm(400,20,2)),
+             cbind(rnorm(400,50,4), rnorm(400,50,4)))
> ## plus 1 random dimension
> x5 <- cbind(x5, rnorm(nrow(x5)))
> 
> clara(x5, 5)
Call:	 clara(x = x5, k = 5) 
Medoids:
          [,1]       [,2]      [,3]
[1,] -1.441508 -0.2898531 0.7516499
[2,] 11.485958 41.8857869 0.7429690
[3,] 41.320516 20.2857507 0.3629901
[4,] 50.642369 48.5485423 0.9250403
[5,] 32.404065  1.1300862 0.7976362
Objective function:	 5.97835
Clustering vector: 	 int [1:2000] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...
Cluster sizes:	    	 400 394 404 402 400 
Best sample:
 [1]   20   31   66  130  189  255  256  262  298  370  418  437  577  611  628
[16]  647  669  789  868  950  952  963 1073 1115 1198 1211 1225 1235 1297 1331
[31] 1342 1357 1358 1371 1398 1441 1509 1534 1601 1609 1721 1729 1743 1774 1815
[46] 1832 1843 1865 1902 1903

Available components:
[1] "sample"     "medoids"    "clustering" "objective"  "clusinfo"  
[6] "diss"       "call"       "silinfo"    "data"      
> summary(clara(x5, 5, samples = 50))
Object of class `clara' from call:
 clara(x = x5, k = 5, samples = 50) 
Medoids:
             [,1]       [,2]        [,3]
[1,]  0.009898956 -1.3995599  0.75311855
[2,]  8.589591773 38.1123175  0.50615564
[3,] 41.128364368 20.9384581 -0.61203968
[4,] 50.399157327 49.7273723 -0.02458452
[5,] 30.555250565 -0.6932155 -0.42527702
Objective function:	  5.794641 
Numerical information per cluster:
     size max_diss  av_diss isolation
[1,]  400 14.80168 5.295404 0.4840910
[2,]  391 26.65813 9.153210 0.7242123
[3,]  404 18.41105 4.009631 0.7646387
[4,]  405 21.78758 5.541303 0.7202381
[5,]  400 14.74078 5.070244 0.6122070
Average silhouette width per cluster:
[1] 0.7982753 0.6584968 0.7980377 0.8500952 0.6332051
Average silhouette width of best sample: 0.7206308 

Best sample:
 [1]   87  171  255  282  291  453  507  513  550  560  561  576  589  606  617
[16]  664  704  728  744  753  808  827  924  940  954  962  992 1005 1022 1040
[31] 1051 1060 1120 1207 1247 1285 1334 1348 1371 1443 1474 1475 1517 1651 1656
[46] 1762 1768 1770 1795 1913
Clustering vector:
   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
  [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
  [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [112] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [149] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [186] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [223] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [260] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [297] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [334] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [371] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 3 2 2 2 2 2
 [408] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [445] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [482] 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2 2 4 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [519] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [556] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [593] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [630] 4 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 2 2 2 2 2
 [667] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [704] 2 2 2 2 4 2 2 4 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [741] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [778] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 5 5 5 5 5 5 5 5 5 5 5 5 5 5
 [815] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5
 [852] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5
 [889] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5
 [926] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5
 [963] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5
[1000] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5
[1037] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5
[1074] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5
[1111] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5
[1148] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5
[1185] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
[1222] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
[1259] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
[1296] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
[1333] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
[1370] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
[1407] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
[1444] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
[1481] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
[1518] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
[1555] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
[1592] 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
[1629] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
[1666] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
[1703] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
[1740] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
[1777] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
[1814] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
[1851] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
[1888] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
[1925] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
[1962] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
[1999] 4 4

Silhouette plot information for best sample:
     cluster neighbor sil_width
255        1        5 0.8437647
171        1        5 0.8394921
291        1        5 0.7950084
282        1        5 0.7610594
87         1        5 0.7520517
744        2        3 0.7750689
753        2        3 0.7732461
550        2        3 0.7714897
606        2        3 0.7681556
453        2        3 0.7560121
728        2        3 0.7512566
576        2        1 0.7499464
513        2        1 0.7331192
560        2        1 0.7291131
507        2        3 0.7027174
664        2        3 0.6941632
704        2        1 0.6447163
617        2        1 0.4172408
589        2        3 0.3493197
561        2        3 0.2618876
1475       3        5 0.8414336
1517       3        5 0.8384105
1371       3        5 0.8352902
1443       3        5 0.8336913
1247       3        5 0.8261265
1207       3        5 0.8203274
1348       3        5 0.8174613
1474       3        5 0.7746370
1334       3        5 0.7730061
1285       3        5 0.6199933
1770       4        3 0.8842829
1768       4        3 0.8745956
1913       4        3 0.8654229
1795       4        3 0.8486021
1651       4        3 0.8404848
1762       4        3 0.8281131
1656       4        3 0.8091652
924        5        3 0.7497243
1060       5        3 0.7478978
1120       5        3 0.7450913
992        5        3 0.7287832
1051       5        3 0.7150749
827        5        3 0.7041583
808        5        3 0.6892041
1022       5        3 0.6689111
1040       5        3 0.6474570
962        5        1 0.6266191
940        5        1 0.4965060
954        5        3 0.4877846
1005       5        3 0.2244547

1225 dissimilarities, summarized :
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.9125 22.5700 36.0600 34.3500 47.5000 83.6400 
Metric :  euclidean 
Number of objects : 50

Available components:
[1] "sample"     "medoids"    "clustering" "objective"  "clusinfo"  
[6] "diss"       "call"       "silinfo"    "data"      
> ## 3 "half" samples:
> clara(x5, 5, samples = 999)
Call:	 clara(x = x5, k = 5, samples = 999) 
Medoids:
           [,1]       [,2]        [,3]
[1,]  0.4753746 -0.1765723  0.38026681
[2,] 10.5292754 39.9278909  0.07664958
[3,] 40.4696100 19.9154135 -0.11342069
[4,] 49.6841771 50.8667494  0.43448856
[5,] 30.1926628  0.2226872  0.20417028
Objective function:	 5.677885
Clustering vector: 	 int [1:2000] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...
Cluster sizes:	    	 400 393 404 403 400 
Best sample:
 [1]    2   45   63  105  173  305  346  354  384  449  482  503  523  528  540
[16]  612  646  649  670  688  731  809  881  916  959 1002 1031 1114 1186 1210
[31] 1223 1233 1275 1276 1290 1365 1395 1400 1447 1454 1593 1598 1695 1704 1727
[46] 1750 1769 1770 1865 1964

Available components:
[1] "sample"     "medoids"    "clustering" "objective"  "clusinfo"  
[6] "diss"       "call"       "silinfo"    "data"      
> clara(x5, 5, samples = 1000)
Call:	 clara(x = x5, k = 5, samples = 1000) 
Medoids:
           [,1]       [,2]        [,3]
[1,]  0.4753746 -0.1765723  0.38026681
[2,] 10.5292754 39.9278909  0.07664958
[3,] 40.4696100 19.9154135 -0.11342069
[4,] 49.6841771 50.8667494  0.43448856
[5,] 30.1926628  0.2226872  0.20417028
Objective function:	 5.677885
Clustering vector: 	 int [1:2000] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...
Cluster sizes:	    	 400 393 404 403 400 
Best sample:
 [1]    2   45   63  105  173  305  346  354  384  449  482  503  523  528  540
[16]  612  646  649  670  688  731  809  881  916  959 1002 1031 1114 1186 1210
[31] 1223 1233 1275 1276 1290 1365 1395 1400 1447 1454 1593 1598 1695 1704 1727
[46] 1750 1769 1770 1865 1964

Available components:
[1] "sample"     "medoids"    "clustering" "objective"  "clusinfo"  
[6] "diss"       "call"       "silinfo"    "data"      
> clara(x5, 5, samples = 1001)
Call:	 clara(x = x5, k = 5, samples = 1001) 
Medoids:
           [,1]       [,2]        [,3]
[1,]  0.4753746 -0.1765723  0.38026681
[2,] 10.5292754 39.9278909  0.07664958
[3,] 40.4696100 19.9154135 -0.11342069
[4,] 49.6841771 50.8667494  0.43448856
[5,] 30.1926628  0.2226872  0.20417028
Objective function:	 5.677885
Clustering vector: 	 int [1:2000] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...
Cluster sizes:	    	 400 393 404 403 400 
Best sample:
 [1]    2   45   63  105  173  305  346  354  384  449  482  503  523  528  540
[16]  612  646  649  670  688  731  809  881  916  959 1002 1031 1114 1186 1210
[31] 1223 1233 1275 1276 1290 1365 1395 1400 1447 1454 1593 1598 1695 1704 1727
[46] 1750 1769 1770 1865 1964

Available components:
[1] "sample"     "medoids"    "clustering" "objective"  "clusinfo"  
[6] "diss"       "call"       "silinfo"    "data"      
> 
> clara(x5, 5, samples = 2000)#full sample
Call:	 clara(x = x5, k = 5, samples = 2000) 
Medoids:
           [,1]       [,2]       [,3]
[1,]  0.4753746 -0.1765723  0.3802668
[2,]  9.9849318 39.8137651 -0.3637146
[3,] 40.4696100 19.9154135 -0.1134207
[4,] 49.5521365 50.9160832  0.3138241
[5,] 30.1926628  0.2226872  0.2041703
Objective function:	 5.675923
Clustering vector: 	 int [1:2000] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...
Cluster sizes:	    	 400 393 404 403 400 
Best sample:
 [1]    4   15   23  135  157  173  188  246  282  318  364  366  377  529  544
[16]  638  649  676  756  771  772  777  812  847  851  855  859  940  948  991
[31] 1042 1114 1149 1201 1316 1400 1442 1477 1480 1487 1603 1669 1670 1712 1745
[46] 1750 1756 1900 1923 1964

Available components:
[1] "sample"     "medoids"    "clustering" "objective"  "clusinfo"  
[6] "diss"       "call"       "silinfo"    "data"      
> 
> 
> ##  small example(s):
> data(ruspini)
> 
> clara(ruspini,4)
Call:	 clara(x = ruspini, k = 4) 
Medoids:
    x   y
10 19  65
32 44 149
52 99 119
67 66  18
Objective function:	 11.51066
Clustering vector: 	 Named int [1:75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...
 - attr(*, "names")= chr [1:75] "1" "2" "3" "4" "5" "6" "7" ...
Cluster sizes:	    	 20 23 17 15 
Best sample:
 [1] 2  3  4  5  6  7  8  9  10 16 18 19 20 21 22 23 25 29 30 32 34 35 36 37 41
[26] 42 43 44 46 47 49 50 52 53 54 58 59 60 61 63 65 66 67 69 71 72 73 75

Available components:
[1] "sample"     "medoids"    "clustering" "objective"  "clusinfo"  
[6] "diss"       "call"       "silinfo"    "data"      
> 
> rus <- data.matrix(ruspini); storage.mode(rus) <- "double"
> ru2 <- rus[c(1:7,21:28, 45:51, 61:69),]
> ru3 <- rus[c(1:4,21:25, 45:48, 61:63),]
> ru4 <- rus[c(1:2,21:22, 45:47),]
> ru5 <- rus[c(1:2,21,    45),]
> daisy(ru5, "manhattan")
Dissimilarities :
[1]  11 118 143 107 132  89

Metric :  manhattan 
Number of objects : 4
> ## Dissimilarities :  11 118 143 107 132  89
> 
> ## no problem anymore, since 2002-12-28:
> clara(ru5, k=3, met="manhattan", sampsize=3,trace=2)[clIn4]
calling .C("clara", *):
C clara(): sample 1 [ntt=1, nunfs=0] -> dysta2()
. clara(): s:= max dys[l=3] = 132
C clara(): sample 2 [ntt=1, nunfs=0] -> dysta2()
. clara(): s:= max dys[l=3] = 11
C clara(): sample 3 [ntt=1, nunfs=0] -> dysta2()
. clara(): s:= max dys[l=3] = 132
C clara(): sample 4 [ntt=1, nunfs=0] -> dysta2()
. clara(): s:= max dys[l=3] = 11
C clara(): sample 5 [ntt=1, nunfs=0] -> dysta2()
. clara(): s:= max dys[l=3] = 132
C clara(): sample _found_ --> dysta2(nbest), resul(), end
$objective
[1] 2.75

$medoids
    x   y
2   5  63
21 28 147
45 85 115

$clusinfo
     size max_diss av_diss isolation
[1,]    2       11     5.5 0.1028037
[2,]    1        0     0.0 0.0000000
[3,]    1        0     0.0 0.0000000

$sample
[1] "2"  "21" "45"

> clara(ru5, k=3, met="manhattan", sampsize=4,trace=1)[clIn4]
calling .C("clara", *):
C clara(): sample _found_ --> dysta2(nbest), resul(), end
$objective
[1] 2.75

$medoids
    x   y
2   5  63
21 28 147
45 85 115

$clusinfo
     size max_diss av_diss isolation
[1,]    2       11     5.5 0.1028037
[2,]    1        0     0.0 0.0000000
[3,]    1        0     0.0 0.0000000

$sample
[1] "1"  "2"  "21" "45"

> 
> daisy(ru4, "manhattan")
Dissimilarities :
 [1]  11 118 124 143 124 115 107 113 132 113 104   6  89 108 103  87 106 101  19
[20]  28   9

Metric :  manhattan 
Number of objects : 7
> ## this one gives problem, from ss = 6 on ___ still after 2002-12-28 ___ :
> for(ss in 4:nrow(ru4)){
+     cat("---\n\nsample size = ",ss,"\n")
+     print(clara(ru4,k=3,met="manhattan",sampsize=ss)[clIn4])
+ }
---

sample size =  4 
$objective
[1] 6.428571

$medoids
    x   y
1   4  53
22 32 149
46 85  96

$clusinfo
     size max_diss  av_diss  isolation
[1,]    2       11 5.500000 0.08870968
[2,]    2        6 3.000000 0.05660377
[3,]    3       19 9.333333 0.17924528

$sample
[1] "22" "45" "46" "1" 

---

sample size =  5 
$objective
[1] 7.714286

$medoids
    x   y
2   5  63
21 28 147
47 78  94

$clusinfo
     size max_diss  av_diss  isolation
[1,]    2       11  5.50000 0.10576923
[2,]    2        6  3.00000 0.05825243
[3,]    3       28 12.33333 0.27184466

$sample
[1] "2"  "21" "22" "45" "47"

---

sample size =  6 
 ** dysta2(): nsel[l= 2] = 0 is OUT
 ** dysta2(): nsel[k= 2] = 0 is OUT
 ** dysta2(): nsel[l= 4] = 0 is OUT
 ** dysta2(): nsel[k= 2] = 0 is OUT
 ** dysta2(): nsel[k= 2] = 0 is OUT
 ** dysta2(): nsel[k= 4] = 0 is OUT
$objective
[1] 6.428571

$medoids
    x   y
2   5  63
22 32 149
46 85  96

$clusinfo
     size max_diss  av_diss  isolation
[1,]    2       11 5.500000 0.09734513
[2,]    2        6 3.000000 0.05660377
[3,]    3       19 9.333333 0.17924528

$sample
[1] "2"  "21" "22" "45" "46" "47"

---

sample size =  7 
$objective
[1] 6.428571

$medoids
    x   y
2   5  63
22 32 149
46 85  96

$clusinfo
     size max_diss  av_diss  isolation
[1,]    2       11 5.500000 0.09734513
[2,]    2        6 3.000000 0.05660377
[3,]    3       19 9.333333 0.17924528

$sample
[1] "1"  "2"  "21" "22" "45" "46" "47"

> for(ss in 4:nrow(ru3)){
+     cat("---\n\nsample size = ",ss,"\n")
+     print(clara(ru3,k=4,met="manhattan",sampsize=ss)[clIn4])
+ }
---

sample size =  4 
$objective
[1] 29.1875

$medoids
    x   y
1   4  53
4   9  77
21 28 147
45 85 115

$clusinfo
     size max_diss  av_diss isolation
[1,]    4      115 34.50000 3.9655172
[2,]    1        0  0.00000 0.0000000
[3,]    5       14  9.00000 0.1573034
[4,]    6      111 47.33333 1.2471910

$sample
[1] "1"  "4"  "21" "45"

---

sample size =  5 
$objective
[1] 13.625

$medoids
    x   y
4   9  77
21 28 147
45 85 115
62 77  12

$clusinfo
     size max_diss av_diss isolation
[1,]    4       29   16.50 0.3258427
[2,]    5       14    9.00 0.1573034
[3,]    4       30   19.25 0.3370787
[4,]    3       15   10.00 0.1351351

$sample
[1] "3"  "4"  "21" "45" "62"

---

sample size =  6 
$objective
[1] 9.0625

$medoids
    x   y
3  10  59
23 35 153
48 74  96
62 77  12

$clusinfo
     size max_diss av_diss isolation
[1,]    4       19   10.00 0.1881188
[2,]    5       13    5.60 0.1354167
[3,]    4       30   11.75 0.3448276
[4,]    3       15   10.00 0.1724138

$sample
[1] "3"  "21" "23" "45" "48" "62"

---

sample size =  7 
$objective
[1] 9.0625

$medoids
    x   y
3  10  59
23 35 153
48 74  96
62 77  12

$clusinfo
     size max_diss av_diss isolation
[1,]    4       19   10.00 0.1881188
[2,]    5       13    5.60 0.1354167
[3,]    4       30   11.75 0.3448276
[4,]    3       15   10.00 0.1724138

$sample
[1] "2"  "3"  "21" "23" "45" "48" "62"

---

sample size =  8 
$objective
[1] 8.8125

$medoids
    x   y
3  10  59
23 35 153
47 78  94
62 77  12

$clusinfo
     size max_diss av_diss isolation
[1,]    4       19   10.00 0.1844660
[2,]    5       13    5.60 0.1274510
[3,]    4       28   10.75 0.3373494
[4,]    3       15   10.00 0.1807229

$sample
[1] "3"  "21" "23" "46" "47" "48" "61" "62"

---

sample size =  9 
$objective
[1] 9.3125

$medoids
    x   y
2   5  63
22 32 149
46 85  96
63 83  21

$clusinfo
     size max_diss av_diss isolation
[1,]    4       18    9.50 0.1592920
[2,]    5        8    5.40 0.0754717
[3,]    4       19    9.75 0.2467532
[4,]    3       30   15.00 0.3896104

$sample
[1] "2"  "21" "22" "23" "45" "46" "47" "61" "63"

---

sample size =  10 
$objective
[1] 8.5625

$medoids
    x   y
3  10  59
23 35 153
46 85  96
62 77  12

$clusinfo
     size max_diss av_diss isolation
[1,]    4       19   10.00 0.1696429
[2,]    5       13    5.60 0.1214953
[3,]    4       19    9.75 0.2065217
[4,]    3       15   10.00 0.1630435

$sample
 [1] "2"  "3"  "22" "23" "45" "46" "47" "61" "62" "63"

---

sample size =  11 
$objective
[1] 8.6875

$medoids
    x   y
2   5  63
23 35 153
47 78  94
62 77  12

$clusinfo
     size max_diss av_diss isolation
[1,]    4       18    9.50 0.1730769
[2,]    5       13    5.60 0.1274510
[3,]    4       28   10.75 0.3373494
[4,]    3       15   10.00 0.1807229

$sample
 [1] "1"  "2"  "3"  "4"  "23" "24" "25" "45" "47" "48" "62"

---

sample size =  12 
$objective
[1] 8.8125

$medoids
    x   y
3  10  59
23 35 153
47 78  94
62 77  12

$clusinfo
     size max_diss av_diss isolation
[1,]    4       19   10.00 0.1844660
[2,]    5       13    5.60 0.1274510
[3,]    4       28   10.75 0.3373494
[4,]    3       15   10.00 0.1807229

$sample
 [1] "2"  "3"  "22" "23" "24" "25" "46" "47" "48" "61" "62" "63"

---

sample size =  13 
$objective
[1] 8.4375

$medoids
    x   y
2   5  63
23 35 153
46 85  96
62 77  12

$clusinfo
     size max_diss av_diss isolation
[1,]    4       18    9.50 0.1592920
[2,]    5       13    5.60 0.1214953
[3,]    4       19    9.75 0.2065217
[4,]    3       15   10.00 0.1630435

$sample
 [1] "1"  "2"  "4"  "22" "23" "24" "25" "45" "46" "47" "61" "62" "63"

---

sample size =  14 
$objective
[1] 8.4375

$medoids
    x   y
2   5  63
23 35 153
46 85  96
62 77  12

$clusinfo
     size max_diss av_diss isolation
[1,]    4       18    9.50 0.1592920
[2,]    5       13    5.60 0.1214953
[3,]    4       19    9.75 0.2065217
[4,]    3       15   10.00 0.1630435

$sample
 [1] "2"  "3"  "4"  "22" "23" "24" "25" "45" "46" "47" "48" "61" "62" "63"

---

sample size =  15 
$objective
[1] 8.375

$medoids
    x   y
2   5  63
22 32 149
46 85  96
62 77  12

$clusinfo
     size max_diss av_diss isolation
[1,]    4       18    9.50 0.1592920
[2,]    5        8    5.40 0.0754717
[3,]    4       19    9.75 0.2065217
[4,]    3       15   10.00 0.1630435

$sample
 [1] "2"  "3"  "4"  "21" "22" "23" "24" "25" "45" "46" "47" "48" "61" "62" "63"

---

sample size =  16 
$objective
[1] 8.375

$medoids
    x   y
2   5  63
22 32 149
46 85  96
62 77  12

$clusinfo
     size max_diss av_diss isolation
[1,]    4       18    9.50 0.1592920
[2,]    5        8    5.40 0.0754717
[3,]    4       19    9.75 0.2065217
[4,]    3       15   10.00 0.1630435

$sample
 [1] "1"  "2"  "3"  "4"  "21" "22" "23" "24" "25" "45" "46" "47" "48" "61" "62"
[16] "63"

> 
> ## Last Line:
> cat('Time elapsed: ', proc.time() - .proctime00,'\n')
Time elapsed:  29.11 0.05 29.28 0 0 
> ## Lynne (P IV, 1.6 GHz):  7.5
> ## nb-mm (P III,700 MHz): 29.2
> 
